[tool.poetry]
name = "pym_s_advent_of_code_2022"
version = "0.1.0"
description = "My solution to Advent of Code 2022 challenge"
authors = ["Pierre-Yves Martin <pym.aldebaran@pm.me>"]
license = "GPL-v3.0"

[tool.poetry.dependencies]
python = "^3.11"
rich = "^12.6.0"
assertpy = "^1.1"
pytest-sugar = "^0.9.6"
pytest-icdiff = "^0.6"

[tool.poetry.dev-dependencies]

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pre-commit = "^2.20.0"
ruff = "^0.0.152"
pytest-pudb = "^0.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
python_files = "*.py"

[tool.ruff]
line-length = 88

# Enable Pyflakes `E` and `F` codes by default.
select = [
    "F", # Pyflakes: generic
    "E", # pycodestyle: generic
    "I", # isort and flake8-tidy-imports: import order and correctness
    "D", # pydocstyle: docstrings convention
    "U", # pyupgrade: python changes due to python version upgrade
    "N", # pep8-naming: naming convention
    "ERA", # eradicate: commented-out code
    "S", # flake8-bandit: security issues
    "C", # flake8-comprehensions: comprehension error/issues
    "T100", # flake8-debugger: debuging issues
    "FBT", # flake8-boolean-trap
    "B", # flake8-bugbear: common bugs and design problems
    "A", # flake8-builtins: builtins shadowing
    "Q", # flake8-quotes: quotes normalisation
    "ANN", # flake8-annotations: annotation problems
    "YTT", # flake8-2020: checks for misuse of sys.version or sys.version_info
    "BLE", # flake8-blind-except: no blind except
    "C901", # mccabe: code complexity
    "PGH", # pygrep-hooks: no eval allowed
    "RUF", # Ruff-specific rules
    "M", # Meta rules
]
ignore = [
    "D212", # Doc not on the same line ass tripl quotes
    # pydocstyle: Google style convention
    "D203", "D204", "D213", "D215", "D400", "D404", "D406", "D407", "D408", "D409", "D413",
    "S101", # assert in code --> needed for pytest
    "T201", "T203", # flake8-print --> print needed to display results
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py311"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.flake8-annotations]
suppress-none-returning = true
